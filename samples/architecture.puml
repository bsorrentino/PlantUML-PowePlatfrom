@startuml 
!include dist/powerapps.png.puml 
!include dist/powerautomate.png.puml 
!include dist/dataverse.png.puml 
!include dist/excel.png.puml 
!include dist/outlook.png.puml 
!include dist/function.png.puml 
!include dist/aibuilder.jpg.puml 
!include dist/sharepoint.png.puml  
left to right direction
rectangle "Outlook\n<$outlook,scale=.4,color=blue>" as MAIL
rectangle "Flow\n<$powerautomate,scale=.4,color=blue>" as trigger
rectangle "Flow\n<$powerautomate,scale=.4,color=blue>" as NEWEXCEL
rectangle "Text\nAnalysys" as TA
rectangle "Dataverse\n <$dataverse,scale=.4,color=green>" as CDS
rectangle "Canvas App\n   <$powerapps,scale=.4,color=purple>" as App
rectangle "Function\n <$function,scale=.4,color=red>" as FUNC
rectangle "AI Model\n <$aibuilder,scale=.4,color=purple>" as AI 
rectangle "<size:12>Sharepoint <$sharepoint,scale=.2,color=green>"  {
rectangle "Excel\n <$excel,scale=.4,color=green>" as Excel
}
actor Approver
actor Validator
MAIL --> trigger : 1. trigger
trigger <-> TA : 2. submit
FUNC -[#gray,dotted,thickness=5,hidden]-> AI: analyse
/' note right
Another "low-code" option
implementing text analyzer
is provided by
Power Platform  <b>AIBuilder
end note '/
TA -> FUNC: 2.1 invoke
trigger --> CDS : 3. Save
App -> CDS :  4. Read
Approver --> App : 5. Approve
App --> NEWEXCEL : 6. Run
NEWEXCEL --> Excel: 7. Generate Excel
Excel <-- Validator: 8. Validate & Share
@enduml
